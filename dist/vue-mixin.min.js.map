{"version":3,"file":"vue-mixin.min.js","sources":["../src/install.js","../src/vueMixinFetchDetail.js","../src/vueMixinFetchList.js","../src/vueMixinStore.js","../src/utils.js","../src/vueMixin.js","../src/index.js"],"sourcesContent":["export let _Vue\n\nexport default function install (Vue) {\n  if (install.installed) return\n  install.installed = true\n  _Vue = Vue\n}\n","import utils from './utils'\n/**\n * 详情，修改，新增可共用的mixin\n * 路由匹配规则：\n * /module\n * /module/create\n * /module/:id/edit\n * /module/:id\n * @param {Object} options 选项\n *  - {String} [key] - 详情的id的key路径\n *  - {Object|Array} [mixins] - 加入你自定义的mixins\n *  - {Function} [fetch] - 请求列表的调用的钩子函数，需要return Promise 类型\n *  - {Function} [model] - 数据的字段集合\n * @return {Object}\n */\nexport default function vueMixinFetchDetail (options) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof options.fetch !== 'function') {\n      return new Error({ msg: '[vueMixinFetchDetail] get options typeof function' })\n    }\n    if (typeof options.model !== 'function') {\n      return new Error({ msg: '[vueMixinFetchDetail] get options typeof function' })\n    }\n  }\n  // 处理key值\n  if (typeof options.key === 'string') {\n    const [detailName, keyName] = options.key.split('.')\n    options.detailName = detailName\n    options.keyName = keyName\n  } else {\n    return\n  }\n  // 处理mixins\n  if (utils.isObject(options.mixins)) {\n    options.mixins = [options.mixins]\n  } else if (!utils.isArray(options.mixins)) {\n    options.mixins = []\n  }\n  const name = 'fetchDetail'\n  const store = options.model()\n\n  return {\n    name,\n    store,\n    install (VueMixin) { // 安装程序\n      const { fetchList } = VueMixin.store\n      if (process.env.NODE_ENV !== 'production') {\n        if (!utils.isObject(fetchList)) {\n          return new Error({ msg: 'Please install the FetchList plugin' })\n        }\n      }\n      function getListItemIndex (key) { // 获取当前页面在列表中的索引，此处可使用算法来优化查找的性能、待续。。。\n        const { list, list: { length } } = fetchList\n        for (let i = 0; i < length; i++) {\n          if (String(list[i][options.keyName]) === String(key)) { // 路由传来的key可能是字符串，也可能是数字\n            return i\n          }\n        }\n        return -1\n      }\n\n      this.listUnwatch = VueMixin.vm.$watch('store.fetchList.list', (list) => { // 监听列表的数据改变\n        const index = getListItemIndex(store[options.detailName][options.keyName])\n        if (index < 0) return false\n        const detail = list[index]\n        Object.keys(store[options.detailName]).forEach((k) => {\n          if (Object.prototype.hasOwnProperty.call(detail, k)) { // 如果存在这个属性，才更新到详情中\n            store[options.detailName][k] = detail[k]\n          }\n        })\n      }, { deep: true })\n      this.detailUnwatch = VueMixin.vm.$watch(`store.${name}.${options.detailName}`, (detail) => { // 监听详情的数据改变\n        const index = getListItemIndex(store[options.detailName][options.keyName])\n        if (index < 0) return false\n        Object.keys(fetchList.list[index]).forEach((k) => {\n          fetchList.list[index][k] = detail[k]\n        })\n      }, { deep: true })\n      return {\n        mixins: options.mixins,\n        props: [options.keyName],\n        beforeRouteEnter (to, from, next) { // 每次路由变化都会调用此钩子函数\n          const toKey = String(to.params[options.keyName])\n          const key = String(store[options.detailName][options.keyName])\n          if (toKey !== key) { // 判断详情的数据和路由要跳转的页面是否一致\n            const index = getListItemIndex(to.params[options.keyName])\n            Object.assign(store, options.model(), { [options.detailName]: fetchList.list[index] || {} })\n          }\n          next()\n        },\n        computed: {\n          ...utils.createComputed(store),\n          $fetchDetail () {\n            const self = this\n            function fetchDetail () {\n              if (!self[options.keyName]) return\n              return options.fetch.call(self).then((res) => {\n                Object.assign(store, res)\n              })\n            }\n            return fetchDetail\n          }\n        },\n        created () {\n          this.$fetchDetail()\n        },\n        watch: {\n          [options.keyName] () {\n            this.$fetchDetail()\n          }\n        }\n      }\n    },\n    destroyed () { // 销毁插件，释放内存\n      this.listUnwatch()\n      this.detailUnwatch()\n    }\n  }\n}\n","import utils from './utils'\n/**\n * vue列表使用的mixin\n * @param {Object} options\n *  - {String} [pagekey] - 分页的唯一标识\n *  - {String} [queryKey] - 地址栏参数的key\n *  - {Object|Array} [mixins] - 加入你自定义的mixins\n *  - {Function} [model] - 列表的字段模型\n *  - {Function} [fetch] - 请求列表的调用的钩子函数，需要return Promise 类型\n * @return {Object}\n */\nexport default function vueMixinFetchList (options) {\n  // 必传选项验证\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof options.pagekey !== 'string') {\n      return new Error({ msg: '[vueMixinFetchList] get options typeof string' })\n    }\n    if (typeof options.queryKey !== 'string') {\n      return new Error({ msg: '[vueMixinFetchList] get options typeof string' })\n    }\n    if (typeof options.fetch !== 'function') {\n      return new Error({ msg: '[vueMixinFetchList] get options typeof function' })\n    }\n    if (typeof options.model !== 'function') {\n      return new Error({ msg: '[vueMixinFetchList] get options typeof function' })\n    }\n  }\n  // 处理mixins\n  if (utils.isObject(options.mixins)) {\n    options.mixins = [options.mixins]\n  } else if (!utils.isArray(options.mixins)) {\n    options.mixins = []\n  }\n  const name = 'fetchList'\n  const store = options.model()\n\n  return {\n    name,\n    store,\n    install (VueMixin) { // 安装程序\n      let dataSearch = ''\n      return {\n        beforeRouteEnter (to, from, next) {\n          // 如果不是在当前模块内跳转，并且列表关联的key和现在的key不一致，则清除数据)\n          if (getSearch(to.query) !== dataSearch) {\n            listInit()\n          }\n          next()\n        },\n        computed: {\n          ...utils.createComputed(store),\n          $fetchList () {\n            const self = this\n            /**\n             * 获取列表的数据\n             */\n            function fetchList () {\n              const search = getSearch(self.$route.query)\n              return options.fetch.call(self).then((res) => {\n                if (search !== getSearch(self.$route.query)) return false // 数据请求回来，页面已经发生改变了\n                Object.assign(store, res)\n                dataSearch = search\n              })\n            }\n            fetchList.init = function init () {\n              listInit.apply(self, arguments)\n            }\n            /**\n             * 查询页面的数据\n             */\n            fetchList.search = function search (...arg) {\n              let query = {}\n              /* eslint-disable no-undef */\n              if (event === arg[0]) { // 事件触发传进来的参数不要\n                arg[0] = {}\n              }\n              if (utils.isObject(arg[0])) {\n                query = arg[0]\n              } else if (typeof arg[0] === 'string') {\n                query[arg[0]] = arg[1]\n              }\n              query = Object.assign({}, self.$route.query, { [options.pagekey]: 1 }, self[options.queryKey], query)\n              self.$router.push({\n                ...this.$route,\n                query\n              })\n            }\n            /**\n             * 将地址栏的参数同步到组件中\n             */\n            fetchList.syncQuery = function syncQuery () {\n              const query = self[options.queryKey]\n              if (utils.isObject(query)) { // 将地址栏的参数，还原到对应的字段中去\n                Object.keys(query).forEach((k) => {\n                  if (Object.prototype.hasOwnProperty.call(self.$route.query, k)) {\n                    query[k] = self.$route.query[k]\n                  }\n                })\n              }\n            }\n            return fetchList\n          }\n        },\n        created () {\n          this.$fetchList.syncQuery()\n          this.$fetchList()\n        },\n        watch: {\n          '$route.query' (val, oldVal) {\n            this.$fetchList.syncQuery()\n            if (getSearch(val) === getSearch(oldVal)) return false // 对象被改变了，但是url并没有改变\n            this.$fetchList()\n          }\n        }\n      }\n    },\n    destroyed (VueMixin) { // 卸载程序\n    }\n  }\n\n  function getSearch (query) { // 获取地址栏?后面的参数\n    const arr = []\n    Object.keys(query).forEach((k) => arr.push(`${k}=${query[k]}`))\n    return arr.join('&')\n  }\n  function listInit () { // 初始化状态\n    const model = options.model()\n    Object.assign(store, model)\n  }\n}\n","import { _Vue } from './install'\nimport utils from './utils'\n/**\n * 缓存列表的数据\n * @param {Array} options\n * - {Array} [base] - 依赖其他的请求\n * - {Boolean} [update] - 是否更新数据\n * - {Function} [fetch] - 请求数据\n */\nexport default function vueMixinStore (options) {\n  const name = 'store'\n  const store = {} // 仓库，所有的数据存储在这里\n  const task = {} // 所有的任务\n  /**\n   * 一项默认的配置\n   */\n  const defaults = {\n    base: [], // 这一项，基于谁\n    update: true, // 是否更新数据\n    fetch: () => Promise.resolve({}) // 处理请求的钩子函数可以依赖其他请求\n  }\n  Object.keys(options).forEach((k) => {\n    const unknown = options[k]\n    if (utils.isObject(unknown)) {\n      task[k] = Object.assign({}, defaults, unknown)\n    } else if (typeof unknown === 'function') {\n      task[k] = Object.assign({}, defaults, { fetch: unknown })\n    }\n  })\n  return {\n    name,\n    store,\n    install (VueMixin) {\n      return {\n        created () {\n          const fetchTask = {} // 仓库的请求任务\n\n          Object.keys(task).forEach((k) => {\n            if (!utils.isHas(this.$data, k)) return false // 组件没有使用这个仓库的数据\n            if (utils.isHas(store, k)) { // 仓库已经存在数据\n              this.$data[k] = store[k] // 从仓库中还原数据\n            } else {\n              _Vue.set(store, k, this.$data[k]) // 在仓库中创建默认的数据\n            }\n            const item = task[k]\n            const data = store[k]\n            if (!item.update && data._ok_) return false // 数据无需更新\n            if (item.base.length === 0) {\n              fetchTask[k] = item\n            } else {\n              // 将依赖的任务添加进来\n              addBaseTask(item.base)\n            }\n          })\n\n          vueMixinStoreFetch.call(this, fetchTask)\n          function addBaseTask (base) {\n            base.forEach((k) => {\n              fetchTask[k] = task[k]\n            })\n          }\n          function vueMixinStoreFetch (fetchTask) {\n            const fetch = []\n            const queue = Object.keys(fetchTask)\n            const storeUpdate = (k, data) => {\n              Object.defineProperty(data, '_ok_', { // 此数据是否是已经加载过了\n                value: true,\n                enumerable: false, // 不可枚举\n                configurable: false, // 属性不可删除\n                writable: true // 值允许可写\n              })\n              this.$data[k] = store[k] = data\n            }\n\n            queue.forEach((k) => {\n              const item = fetchTask[k]\n              const promise = item.fetch.call(this).then((res) => {\n                storeUpdate(k, res)\n                return res\n              })\n              fetch.push(promise)\n            })\n            return Promise.all(fetch).then((arg) => {\n              Object.keys(task).forEach((k) => {\n                const list = []\n                const item = task[k]\n                if (!item.base.length) return false // 没有依赖任务\n                for (let i = 0; i < item.base.length; i++) {\n                  const index = queue.indexOf(item.base[i])\n                  if (index > -1) {\n                    list.push(arg[index])\n                  } else {\n                    break\n                  }\n                }\n                if (list.length === item.base.length) { // 执行依赖的任务\n                  storeUpdate(k, item.fetch.apply(this, list))\n                }\n              })\n            })\n          }\n        },\n        computed: {\n          $vueMixinStore () {\n            return store\n          }\n        }\n      }\n    }\n  }\n}\n","export default {\n  isObject (obj) {\n    return Object.prototype.toString.call(obj) === '[object Object]'\n  },\n  isArray (arr) {\n    return Object.prototype.toString.call(arr) === '[object Array]'\n  },\n  isHas (obj, k) {\n    return Object.prototype.hasOwnProperty.call(obj, k)\n  },\n  createComputed (store) {\n    const computed = {}\n    Object.keys(store).forEach((k) => {\n      computed[k] = {\n        get () {\n          return store[k]\n        },\n        set (v) {\n          store[k] = v\n        }\n      }\n    })\n    return computed\n  }\n}\n","import { _Vue } from './install'\nimport utils from './utils'\n/**\n * vue mixin插件\n * return {Class}\n */\nexport default class VueMixin {\n  constructor (options) {\n    this.mixins = {}\n    this.store = {}\n    this.plugins = options.plugins || []\n\n    // 创建Vue实例\n    this.vm = new _Vue({\n      data: {\n        store: this.store\n      }\n    })\n    // 安装插件\n    this.plugins.forEach((item) => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof item.name !== 'string' || this.mixins[item.name]) {\n          return new Error({ msg: `[VueMixin] Plug in conflict [${item.name}]` })\n        }\n      }\n      this.mixins[item.name] = Object.assign(item.install(this))\n      if (utils.isObject(item.store)) {\n        this.createStore(item.name, item.store)\n      }\n    })\n  }\n  createStore (name, store) { // 创建仓库\n    _Vue.set(this.store, name, store)\n  }\n  destroyed () { // 销毁程序，释放内存\n    this.plugins.forEach((item) => { // 销毁插件\n      if (typeof item.destroyed === 'function') {\n        item.destroyed()\n      }\n    })\n    this.vm.destroyed() // 销毁vm\n  }\n}\n","import install from './install'\nimport VueMixin from './vueMixin'\nexport { default as vueMixinFetchDetail } from './vueMixinFetchDetail'\nexport { default as vueMixinFetchList } from './vueMixinFetchList'\nexport { default as vueMixinStore } from './vueMixinStore'\n\nexport default VueMixin\n\nVueMixin.install = install\n"],"names":["install","Vue","installed","vueMixinFetchDetail","options","key","split","detailName","keyName","utils","isObject","mixins","isArray","store","model","VueMixin","getListItemIndex","list","fetchList","length","i","String","listUnwatch","vm","$watch","index","detail","keys","forEach","k","Object","prototype","hasOwnProperty","call","deep","detailUnwatch","to","from","next","params","assign","createComputed","fetchDetail","self","fetch","then","res","this","$fetchDetail","vueMixinFetchList","getSearch","query","arr","push","join","listInit","dataSearch","search","$route","init","apply","arguments","arg","event","pagekey","queryKey","$router","syncQuery","$fetchList","val","oldVal","vueMixinStore","task","defaults","Promise","resolve","unknown","addBaseTask","base","vueMixinStoreFetch","fetchTask","queue","storeUpdate","data","defineProperty","$data","item","promise","all","indexOf","isHas","_this","set","update","_ok_","_Vue","obj","toString","computed","v","plugins","name","createStore","destroyed"],"mappings":"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"}