{"version":3,"file":"vue-mixin.min.js","sources":["../src/install.js","../src/vueMixinFetchDetail.js","../src/vueMixinFetchList.js","../src/vueMixinStore.js","../src/utils.js","../src/vueMixin.js","../src/index.js"],"sourcesContent":["export let _Vue\n\nexport default function install (Vue) {\n  if (install.installed) return\n  install.installed = true\n  _Vue = Vue\n}\n","import utils from './utils'\n/**\n * 详情，修改，新增可共用的mixin\n * 路由匹配规则：\n * /module\n * /module/create\n * /module/:id/edit\n * /module/:id\n * @param {Object} options 选项\n *  - {String} [key] - id的唯一标识\n *  - {Function} [fetch] - 请求列表的调用的钩子函数，需要return Promise 类型\n *  - {Function} [model] - 数据的字段集合\n * @return {Object}\n */\nexport default function vueMixinFetchDetail (options) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof options.fetch !== 'function') {\n      return new Error({ msg: '[vueMixinFetchDetail] get options typeof function' })\n    }\n    if (typeof options.model !== 'function') {\n      return new Error({ msg: '[vueMixinFetchDetail] get options typeof function' })\n    }\n  }\n  if (options.key === undefined) { // 列表和详情唯一的id键值，不可重复\n    options.key = 'id'\n  }\n  const name = 'fetchDetail'\n  const store = {\n    detail: options.model()\n  }\n\n  return {\n    name,\n    store,\n    install (VueMixin) { // 安装程序\n      const { fetchList } = VueMixin.store\n      if (process.env.NODE_ENV !== 'production') {\n        if (!utils.isObject(fetchList)) {\n          return new Error({ msg: 'Please install the FetchList plugin' })\n        }\n      }\n      function getListItemIndex (key) { // 获取当前页面在列表中的索引，此处可使用算法来优化查找的性能、待续。。。\n        const { list, list: { length } } = fetchList\n        for (let i = 0; i < length; i++) {\n          if (String(list[i][options.key]) === String(key)) { // 路由传来的key可能是字符串，也可能是数字\n            return i\n          }\n        }\n        return -1\n      }\n\n      this.listUnwatch = VueMixin.vm.$watch('store.fetchList.list', (list) => { // 监听列表的数据改变\n        const index = getListItemIndex(store.detail[options.key])\n        if (index < 0) return false\n        const detail = list[index]\n        Object.keys(store.detail).forEach((k) => {\n          if (Object.prototype.hasOwnProperty.call(detail, k)) { // 如果存在这个属性，才更新到详情中\n            store.detail[k] = detail[k]\n          }\n        })\n      }, { deep: true })\n      this.detailUnwatch = VueMixin.vm.$watch(`store.${name}.detail`, (detail) => { // 监听详情的数据改变\n        const index = getListItemIndex(store.detail[options.key])\n        if (index < 0) return false\n        Object.keys(fetchList.list[index]).forEach((k) => {\n          fetchList.list[index][k] = detail[k]\n        })\n      }, { deep: true })\n      return {\n        props: [options.key],\n        beforeRouteEnter (to, from, next) { // 每次路由变化都会调用此钩子函数\n          if (String(to.params[options.key]) !== String(store.detail[options.key])) { // 判断详情的数据和路由要跳转的页面是否一致\n            const index = getListItemIndex(to.params[options.key])\n            Object.assign(store.detail, options.model(), fetchList.list[index] || {})\n          }\n          next()\n        },\n        computed: {\n          ...utils.createComputed(store),\n          $fetchDetail () {\n            const self = this\n            function fetchDetail () {\n              if (!self[options.key]) return\n              return options.fetch.call(self).then((detail) => (store.detail = detail))\n            }\n            return fetchDetail\n          }\n        },\n        created () {\n          this.$fetchDetail()\n        },\n        watch: {\n          [options.key] () {\n            this.$fetchDetail()\n          }\n        }\n      }\n    },\n    destroyed () { // 销毁插件，释放内存\n      this.listUnwatch()\n      this.detailUnwatch()\n    }\n  }\n}\n","import utils from './utils'\n/**\n * vue列表使用的mixin\n * @param {Object} options\n *  - {String} [pagekey] - 分页的唯一标识\n *  - {String} [queryKey] - 地址栏参数的key\n *  - {Function} [fetch] - 请求列表的调用的钩子函数，需要return Promise 类型\n *  - {Function} [model] - 列表的字段模型\n * @return {Object}\n */\nexport default function vueMixinFetchList (options) {\n  // 必传选项验证\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof options.pagekey !== 'string') {\n      return new Error({ msg: '[vueMixinFetchList] get options typeof string' })\n    }\n    if (typeof options.queryKey !== 'string') {\n      return new Error({ msg: '[vueMixinFetchList] get options typeof string' })\n    }\n    if (typeof options.fetch !== 'function') {\n      return new Error({ msg: '[vueMixinFetchList] get options typeof function' })\n    }\n    if (typeof options.model !== 'function') {\n      return new Error({ msg: '[vueMixinFetchList] get options typeof function' })\n    }\n  }\n  const name = 'fetchList'\n  const store = options.model()\n\n  return {\n    name,\n    store,\n    install (VueMixin) { // 安装程序\n      let dataSearch = ''\n      return {\n        beforeRouteEnter (to, from, next) {\n          // 如果不是在当前模块内跳转，并且列表关联的key和现在的key不一致，则清除数据)\n          if (getSearch(to.query) !== dataSearch) {\n            listInit()\n          }\n          next()\n        },\n        computed: {\n          ...utils.createComputed(store),\n          $fetchList () {\n            const self = this\n            /**\n             * 获取列表的数据\n             */\n            function fetchList () {\n              const search = getSearch(self.$route.query)\n              return options.fetch.call(self).then((res) => {\n                if (search !== getSearch(self.$route.query)) return false // 数据请求回来，页面已经发生改变了\n                Object.assign(store, options.model(), res)\n                dataSearch = search\n              })\n            }\n            fetchList.init = function init () {\n              listInit.apply(self, arguments)\n            }\n            /**\n             * 查询页面的数据\n             */\n            fetchList.search = function search (...arg) {\n              let query = {}\n              /* eslint-disable no-undef */\n              if (event === arg[0]) { // 事件触发传进来的参数不要\n                arg[0] = {}\n              }\n              if (utils.isObject(arg[0])) {\n                query = arg[0]\n              } else if (typeof arg[0] === 'string') {\n                query[arg[0]] = arg[1]\n              }\n              query = Object.assign({}, self.$route.query, { [options.pagekey]: 1 }, self[options.queryKey], query)\n              self.$router.push({\n                ...this.$route,\n                query\n              })\n            }\n            /**\n             * 将地址栏的参数同步到组件中\n             */\n            fetchList.syncQuery = function syncQuery () {\n              const query = self[options.queryKey]\n              if (utils.isObject(query)) { // 将地址栏的参数，还原到对应的字段中去\n                Object.keys(query).forEach((k) => {\n                  if (Object.prototype.hasOwnProperty.call(self.$route.query, k)) {\n                    query[k] = self.$route.query[k]\n                  }\n                })\n              }\n            }\n            return fetchList\n          }\n        },\n        created () {\n          this.$fetchList.syncQuery()\n          this.$fetchList()\n        },\n        watch: {\n          '$route.query' (val, oldVal) {\n            this.$fetchList.syncQuery()\n            if (getSearch(val) === getSearch(oldVal)) return false // 对象被改变了，但是url并没有改变\n            this.$fetchList()\n          }\n        }\n      }\n    },\n    destroyed (VueMixin) { // 卸载程序\n    }\n  }\n\n  function getSearch (query) { // 获取地址栏?后面的参数\n    const arr = []\n    Object.keys(query).forEach((k) => arr.push(`${k}=${query[k]}`))\n    return arr.join('&')\n  }\n  function listInit () { // 初始化状态\n    const model = options.model()\n    Object.assign(store, model)\n  }\n}\n","import { _Vue } from './install'\nimport utils from './utils'\n/**\n * 缓存列表的数据\n * @param {Array} options\n * - {Array} [base] - 依赖其他的请求\n * - {Boolean} [update] - 是否更新数据\n * - {Function} [fetch] - 请求数据\n */\nexport default function vueMixinStore (options) {\n  const name = 'store'\n  const store = {} // 仓库，所有的数据存储在这里\n  const task = {} // 所有的任务\n  /**\n   * 一项默认的配置\n   */\n  const defaults = {\n    base: [], // 这一项，基于谁\n    update: true, // 是否更新数据\n    fetch: () => Promise.resolve({}) // 处理请求的钩子函数可以依赖其他请求\n  }\n  Object.keys(options).forEach((k) => {\n    const unknown = options[k]\n    if (utils.isObject(unknown)) {\n      task[k] = Object.assign({}, defaults, unknown)\n    } else if (typeof unknown === 'function') {\n      task[k] = Object.assign({}, defaults, { fetch: unknown })\n    }\n  })\n  return {\n    name,\n    store,\n    install (VueMixin) {\n      return {\n        created () {\n          const fetchTask = {} // 仓库的请求任务\n\n          Object.keys(task).forEach((k) => {\n            if (!utils.isHas(this.$data, k)) return false // 组件没有使用这个仓库的数据\n            if (utils.isHas(store, k)) { // 仓库已经存在数据\n              this.$data[k] = store[k] // 从仓库中还原数据\n            } else {\n              _Vue.set(store, k, this.$data[k]) // 在仓库中创建默认的数据\n            }\n            const item = task[k]\n            const data = store[k]\n            if (!item.update && data._ok_) return false // 数据无需更新\n            if (item.base.length === 0) {\n              fetchTask[k] = item\n            } else {\n              // 将依赖的任务添加进来\n              addBaseTask(item.base)\n            }\n          })\n\n          vueMixinStoreFetch.call(this, fetchTask)\n          function addBaseTask (base) {\n            base.forEach((k) => {\n              fetchTask[k] = task[k]\n            })\n          }\n          function vueMixinStoreFetch (fetchTask) {\n            const fetch = []\n            const queue = Object.keys(fetchTask)\n            const storeUpdate = (k, data) => {\n              Object.defineProperty(data, '_ok_', { // 此数据是否是已经加载过了\n                value: true,\n                enumerable: false, // 不可枚举\n                configurable: false, // 属性不可删除\n                writable: true // 值允许可写\n              })\n              this.$data[k] = store[k] = data\n            }\n\n            queue.forEach((k) => {\n              const item = fetchTask[k]\n              const promise = item.fetch.call(this).then((res) => {\n                storeUpdate(k, res)\n                return res\n              })\n              fetch.push(promise)\n            })\n            return Promise.all(fetch).then((arg) => {\n              Object.keys(task).forEach((k) => {\n                const list = []\n                const item = task[k]\n                if (!item.base.length) return false // 没有依赖任务\n                for (let i = 0; i < item.base.length; i++) {\n                  const index = queue.indexOf(item.base[i])\n                  if (index > -1) {\n                    list.push(arg[index])\n                  } else {\n                    break\n                  }\n                }\n                if (list.length === item.base.length) { // 执行依赖的任务\n                  storeUpdate(k, item.fetch.apply(this, list))\n                }\n              })\n            })\n          }\n        },\n        computed: {\n          $vueMixinStore () {\n            return store\n          }\n        }\n      }\n    }\n  }\n}\n","export default {\n  isObject (obj) {\n    return Object.prototype.toString.call(obj) === '[object Object]'\n  },\n  isArray (arr) {\n    return Object.prototype.toString.call(arr) === '[object Array]'\n  },\n  isHas (obj, k) {\n    return Object.prototype.hasOwnProperty.call(obj, k)\n  },\n  createComputed (store) {\n    const computed = {}\n    Object.keys(store).forEach((k) => {\n      computed[k] = {\n        get () {\n          return store[k]\n        },\n        set (v) {\n          store[k] = v\n        }\n      }\n    })\n    return computed\n  }\n}\n","import { _Vue } from './install'\nimport utils from './utils'\n/**\n * vue mixin插件\n * return {Class}\n */\nexport default class VueMixin {\n  constructor (options) {\n    this.mixins = {}\n    this.store = {}\n    this.plugins = options.plugins || []\n\n    // 创建Vue实例\n    this.vm = new _Vue({\n      data: {\n        store: this.store\n      }\n    })\n    // 安装插件\n    this.plugins.forEach((item) => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof item.name !== 'string' || this.mixins[item.name]) {\n          return new Error({ msg: `[VueMixin] Plug in conflict [${item.name}]` })\n        }\n      }\n      this.mixins[item.name] = Object.assign(item.install(this))\n      if (utils.isObject(item.store)) {\n        this.createStore(item.name, item.store)\n      }\n    })\n  }\n  createStore (name, store) { // 创建仓库\n    _Vue.set(this.store, name, store)\n  }\n  destroyed () { // 销毁程序，释放内存\n    this.plugins.forEach((item) => { // 销毁插件\n      if (typeof item.destroyed === 'function') {\n        item.destroyed()\n      }\n    })\n    this.vm.destroyed() // 销毁vm\n  }\n}\n","import install from './install'\nimport VueMixin from './vueMixin'\nexport { default as vueMixinFetchDetail } from './vueMixinFetchDetail'\nexport { default as vueMixinFetchList } from './vueMixinFetchList'\nexport { default as vueMixinStore } from './vueMixinStore'\n\nexport default VueMixin\n\nVueMixin.install = install\n"],"names":["install","Vue","installed","vueMixinFetchDetail","options","undefined","key","store","model","VueMixin","getListItemIndex","list","fetchList","length","i","String","listUnwatch","vm","$watch","index","detail","keys","forEach","k","Object","prototype","hasOwnProperty","call","deep","detailUnwatch","to","from","next","params","assign","utils","createComputed","fetchDetail","self","fetch","then","this","$fetchDetail","vueMixinFetchList","getSearch","query","arr","push","join","listInit","dataSearch","search","$route","res","init","apply","arguments","arg","event","isObject","pagekey","queryKey","$router","syncQuery","$fetchList","val","oldVal","vueMixinStore","task","defaults","Promise","resolve","unknown","addBaseTask","base","vueMixinStoreFetch","fetchTask","queue","storeUpdate","data","defineProperty","$data","item","promise","all","indexOf","isHas","_this","set","update","_ok_","_Vue","obj","toString","computed","v","mixins","plugins","name","createStore","destroyed"],"mappings":"YAEA,SAAwBA,SAASC,GAC3BD,QAAQE,oBACJA,WAAY,OACbD,GCST,QAAwBE,qBAAqBC,OASvBC,KAAhBD,EAAQE,QACFA,IAAM,SAGVC,WACIH,EAAQI,qBAFL,uCAQFC,WAOEC,GAAkBJ,OAEpB,GADGK,GAA2BC,EAA3BD,KAAcE,EAAaD,EAArBD,KAAQE,OACbC,EAAI,EAAGA,EAAID,EAAQC,OACtBC,OAAOJ,EAAKG,GAAGV,EAAQE,QAAUS,OAAOT,SACnCQ,UAGH,KAbFF,GAAcH,EAASF,MAAvBK,sBAgBHI,YAAcP,EAASQ,GAAGC,OAAO,uBAAwB,SAACP,MACvDQ,GAAQT,EAAiBH,EAAMa,OAAOhB,EAAQE,SAChDa,EAAQ,EAAG,OAAO,KAChBC,GAAST,EAAKQ,UACbE,KAAKd,EAAMa,QAAQE,QAAQ,SAACC,GAC7BC,OAAOC,UAAUC,eAAeC,KAAKP,EAAQG,OACzCH,OAAOG,GAAKH,EAAOG,QAG1BK,MAAM,SACNC,cAAgBpB,EAASQ,GAAGC,kCAA+B,SAACE,MACzDD,GAAQT,EAAiBH,EAAMa,OAAOhB,EAAQE,SAChDa,EAAQ,EAAG,OAAO,SACfE,KAAKT,EAAUD,KAAKQ,IAAQG,QAAQ,SAACC,KAChCZ,KAAKQ,GAAOI,GAAKH,EAAOG,OAEjCK,MAAM,YAEDxB,EAAQE,+BACEwB,EAAIC,EAAMC,MACtBjB,OAAOe,EAAGG,OAAO7B,EAAQE,QAAUS,OAAOR,EAAMa,OAAOhB,EAAQE,MAAO,IAClEa,GAAQT,EAAiBoB,EAAGG,OAAO7B,EAAQE,aAC1C4B,OAAO3B,EAAMa,OAAQhB,EAAQI,QAASI,EAAUD,KAAKQ,kCAK3DgB,MAAMC,eAAe7B,oCAGb8B,QACFC,EAAKlC,EAAQE,WACXF,GAAQmC,MAAMZ,KAAKW,GAAME,KAAK,SAACpB,SAAYb,GAAMa,OAASA,OAH7DkB,GAAOG,WAKNJ,8BAIJK,wCAGJtC,EAAQE,oBACFoC,6CAMN1B,mBACAa,kBC1FX,QAAwBc,mBAAmBvC,WAuGhCwC,GAAWC,MACZC,oBACCzB,KAAKwB,GAAOvB,QAAQ,SAACC,SAAMuB,GAAIC,KAAQxB,MAAKsB,EAAMtB,MAClDuB,EAAIE,KAAK,aAETC,QACDzC,GAAQJ,EAAQI,eACf0B,OAAO3B,EAAOC,MA7FjBD,GAAQH,EAAQI,oBADT,qCAMFC,MACHyC,GAAa,oCAEGpB,EAAIC,EAAMC,GAEtBY,EAAUd,EAAGe,SAAWK,iCAMzBf,MAAMC,eAAe7B,kCAMbK,QACDuC,GAASP,EAAUN,EAAKc,OAAOP,aAC9BzC,GAAQmC,MAAMZ,KAAKW,GAAME,KAAK,SAACa,MAChCF,IAAWP,EAAUN,EAAKc,OAAOP,OAAQ,OAAO,SAC7CX,OAAO3B,EAAOH,EAAQI,QAAS6C,KACzBF,OATXb,GAAOG,cAYHa,KAAO,aACNC,MAAMjB,EAAMkB,cAKbL,OAAS,kBACbN,yBADiCY,wCAGjCC,SAAUD,EAAI,OACZ,OAEFtB,MAAMwB,SAASF,EAAI,MACbA,EAAI,GACe,gBAAXA,GAAI,OACdA,EAAI,IAAMA,EAAI,MAEdjC,OAAOU,UAAWI,EAAKc,OAAOP,wBAAUzC,EAAQwD,QAAU,GAAKtB,EAAKlC,EAAQyD,UAAWhB,KAC1FiB,QAAQf,iBACRN,KAAKW,sBAOFW,UAAY,cACdlB,GAAQP,EAAKlC,EAAQyD,SACvB1B,OAAMwB,SAASd,WACVxB,KAAKwB,GAAOvB,QAAQ,SAACC,GACtBC,OAAOC,UAAUC,eAAeC,KAAKW,EAAKc,OAAOP,MAAOtB,OACpDA,GAAKe,EAAKc,OAAOP,MAAMtB,OAK9BX,6BAIJoD,WAAWD,iBACXC,6CAGWC,EAAKC,WACdF,WAAWD,YACZnB,EAAUqB,KAASrB,EAAUsB,GAAS,OAAO,OAC5CF,oCAKFvD,MCpGf,QAAwB0D,eAAe/D,MAE/BG,MACA6D,KAIAC,mBAEI,QACD,iBAAMC,SAAQC,4BAEhBlD,KAAKjB,GAASkB,QAAQ,SAACC,MACtBiD,GAAUpE,EAAQmB,EACpBY,OAAMwB,SAASa,KACZjD,GAAKC,OAAOU,UAAWmC,EAAUG,GACV,kBAAZA,OACXjD,GAAKC,OAAOU,UAAWmC,GAAY9B,MAAOiC,aAhBtC,iCAsBF/D,qCAwBMgE,GAAaC,KACfpD,QAAQ,SAACC,KACFA,GAAK6C,EAAK7C,aAGfoD,GAAoBC,cACrBrC,KACAsC,EAAQrD,OAAOH,KAAKuD,GACpBE,EAAc,SAACvD,EAAGwD,UACfC,eAAeD,EAAM,eACnB,cACK,gBACE,YACJ,MAEPE,MAAM1D,GAAKhB,EAAMgB,GAAKwD,YAGvBzD,QAAQ,SAACC,MACP2D,GAAON,EAAUrD,GACjB4D,EAAUD,EAAK3C,MAAMZ,QAAWa,KAAK,SAACa,YAC9B9B,EAAG8B,GACRA,MAEHN,KAAKoC,KAENb,QAAQc,IAAI7C,GAAOC,KAAK,SAACiB,UACvBpC,KAAK+C,GAAM9C,QAAQ,SAACC,MACnBZ,MACAuE,EAAOd,EAAK7C,OACb2D,EAAKR,KAAK7D,OAAQ,OAAO,MACzB,GAAIC,GAAI,EAAGA,EAAIoE,EAAKR,KAAK7D,OAAQC,IAAK,IACnCK,GAAQ0D,EAAMQ,QAAQH,EAAKR,KAAK5D,SAClCK,GAAS,WACN4B,KAAKU,EAAItC,IAKdR,EAAKE,SAAWqE,EAAKR,KAAK7D,UAChBU,EAAG2D,EAAK3C,MAAMgB,QAAY5C,mBA7DxCiE,YAECvD,KAAK+C,GAAM9C,QAAQ,SAACC,OACpBY,MAAMmD,MAAMC,EAAKN,MAAO1D,GAAI,OAAO,CACpCY,OAAMmD,MAAM/E,EAAOgB,KAChB0D,MAAM1D,GAAKhB,EAAMgB,QAEjBiE,IAAIjF,EAAOgB,EAAGgE,EAAKN,MAAM1D,OAE1B2D,GAAOd,EAAK7C,GACZwD,EAAOxE,EAAMgB,OACd2D,EAAKO,QAAUV,EAAKW,KAAM,OAAO,CACb,KAArBR,EAAKR,KAAK7D,SACFU,GAAK2D,IAGHA,EAAKR,UAIF/C,KAAKc,KAAMmC,8CAiDrBrE,8DHxGZ,IAAIoF,sCICCC,SACuC,oBAAxCpE,OAAOC,UAAUoE,SAASlE,KAAKiE,qBAE/B9C,SACwC,mBAAxCtB,OAAOC,UAAUoE,SAASlE,KAAKmB,mBAEjC8C,EAAKrE,SACHC,QAAOC,UAAUC,eAAeC,KAAKiE,EAAKrE,4BAEnChB,MACRuF,oBACCzE,KAAKd,GAAOe,QAAQ,SAACC,KACjBA,yBAEEhB,GAAMgB,iBAEVwE,KACGxE,GAAKwE,MAIVD,gqBChBUrF,iCACNL,0CACN4F,eACAzF,cACA0F,QAAU7F,EAAQ6F,iBAGlBhF,GAAK,GAAI0E,mBAEHlD,KAAKlC,cAIX0F,QAAQ3E,QAAQ,SAAC4D,KAMfc,OAAOd,EAAKgB,MAAQ1E,OAAOU,OAAOgD,EAAKlF,YACxCmC,MAAMwB,SAASuB,EAAK3E,UACjB4F,YAAYjB,EAAKgB,KAAMhB,EAAK3E,iEAI1B2F,EAAM3F,QACZiF,IAAI/C,KAAKlC,MAAO2F,EAAM3F,4CAGtB0F,QAAQ3E,QAAQ,SAAC4D,GACU,kBAAnBA,GAAKkB,aACTA,mBAGJnF,GAAGmF,oBChCZ3F,YAAST,QAAUA"}